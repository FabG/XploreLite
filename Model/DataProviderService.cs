//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 4.0.50826.0
// 
namespace Xplore.Framework.Common.DataProvider.DTO
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetConfigDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public partial class GetConfigDTO : object
    {
        
        private string[] ContextInfoField;
        
        private string DataProviderIdField;
        
        private bool ForceConfigRefreshField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ContextInfo
        {
            get
            {
                return this.ContextInfoField;
            }
            set
            {
                this.ContextInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataProviderId
        {
            get
            {
                return this.DataProviderIdField;
            }
            set
            {
                this.DataProviderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceConfigRefresh
        {
            get
            {
                return this.ForceConfigRefreshField;
            }
            set
            {
                this.ForceConfigRefreshField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataProviderWSResultDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.ExceptionMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.PagingDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.FilterDTO[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.FilterDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.SortDTO[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.DTO.SortDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO))]
    public partial class DataProviderWSResultDTO : object
    {
        
        private string CodeField;
        
        private string DescriptionField;
        
        private object ResultObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ResultObject
        {
            get
            {
                return this.ResultObjectField;
            }
            set
            {
                this.ResultObjectField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDataParamsDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public partial class GetDataParamsDTO : object
    {
        
        private string[] ContextInfoField;
        
        private Xplore.Framework.Common.DataProvider.DTO.ExceptionMode ExceptionModeField;
        
        private bool ForceDataRefreshField;
        
        private Xplore.Framework.Common.DataProvider.DTO.PagingDTO PageInfoField;
        
        private Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PostExecFilterField;
        
        private Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PreExecFilterField;
        
        private string RequestIdField;
        
        private Xplore.Framework.Common.DataProvider.DTO.SortDTO[] SortInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ContextInfo
        {
            get
            {
                return this.ContextInfoField;
            }
            set
            {
                this.ContextInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.ExceptionMode ExceptionMode
        {
            get
            {
                return this.ExceptionModeField;
            }
            set
            {
                this.ExceptionModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceDataRefresh
        {
            get
            {
                return this.ForceDataRefreshField;
            }
            set
            {
                this.ForceDataRefreshField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.PagingDTO PageInfo
        {
            get
            {
                return this.PageInfoField;
            }
            set
            {
                this.PageInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PostExecFilter
        {
            get
            {
                return this.PostExecFilterField;
            }
            set
            {
                this.PostExecFilterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PreExecFilter
        {
            get
            {
                return this.PreExecFilterField;
            }
            set
            {
                this.PreExecFilterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                this.RequestIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.SortDTO[] SortInfo
        {
            get
            {
                return this.SortInfoField;
            }
            set
            {
                this.SortInfoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionMode", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public enum ExceptionMode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlyException = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludeException = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MixedMode = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public partial class PagingDTO : object
    {
        
        private int PageSizeField;
        
        private int RequiredPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize
        {
            get
            {
                return this.PageSizeField;
            }
            set
            {
                this.PageSizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredPage
        {
            get
            {
                return this.RequiredPageField;
            }
            set
            {
                this.RequiredPageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public partial class FilterDTO : object
    {
        
        private string ComparisonOperatorField;
        
        private string NameField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComparisonOperator
        {
            get
            {
                return this.ComparisonOperatorField;
            }
            set
            {
                this.ComparisonOperatorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO")]
    public partial class SortDTO : object
    {
        
        private string ColumnIdField;
        
        private string DirectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnId
        {
            get
            {
                return this.ColumnIdField;
            }
            set
            {
                this.ColumnIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction
        {
            get
            {
                return this.DirectionField;
            }
            set
            {
                this.DirectionField = value;
            }
        }
    }
}
namespace Xplore.Framework.Common.DataProvider.DTO.In
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionParamDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO." +
        "In")]
    public partial class ExceptionParamDTO : object
    {
        
        private string DataProviderIdField;
        
        private string[] RowIdsField;
        
        private string UserIdField;
        
        private string VisibilityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataProviderId
        {
            get
            {
                return this.DataProviderIdField;
            }
            set
            {
                this.DataProviderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RowIds
        {
            get
            {
                return this.RowIdsField;
            }
            set
            {
                this.RowIdsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visibility
        {
            get
            {
                return this.VisibilityField;
            }
            set
            {
                this.VisibilityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationParamDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.DTO." +
        "In")]
    public partial class AnnotationParamDTO : object
    {
        
        private string ColIdField;
        
        private string DataProviderIdField;
        
        private string DescriptionField;
        
        private string OwnerUserIdField;
        
        private string RowIdField;
        
        private string TypeField;
        
        private string UpdateUserIdField;
        
        private string VisibilityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColId
        {
            get
            {
                return this.ColIdField;
            }
            set
            {
                this.ColIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataProviderId
        {
            get
            {
                return this.DataProviderIdField;
            }
            set
            {
                this.DataProviderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerUserId
        {
            get
            {
                return this.OwnerUserIdField;
            }
            set
            {
                this.OwnerUserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowId
        {
            get
            {
                return this.RowIdField;
            }
            set
            {
                this.RowIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUserId
        {
            get
            {
                return this.UpdateUserIdField;
            }
            set
            {
                this.UpdateUserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visibility
        {
            get
            {
                return this.VisibilityField;
            }
            set
            {
                this.VisibilityField = value;
            }
        }
    }
}
namespace Xplore.Framework.Common.DataProvider.Topology.DTO
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTopologyDataParamsDTO", Namespace="http://schemas.datacontract.org/2004/07/Xplore.Framework.Common.DataProvider.Topo" +
        "logy.DTO")]
    public partial class GetTopologyDataParamsDTO : object
    {
        
        private string[] ContextInfoField;
        
        private bool ForceDataRefreshField;
        
        private Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PreExecFilterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ContextInfo
        {
            get
            {
                return this.ContextInfoField;
            }
            set
            {
                this.ContextInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceDataRefresh
        {
            get
            {
                return this.ForceDataRefreshField;
            }
            set
            {
                this.ForceDataRefreshField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Xplore.Framework.Common.DataProvider.DTO.FilterDTO[] PreExecFilter
        {
            get
            {
                return this.PreExecFilterField;
            }
            set
            {
                this.PreExecFilterField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IDataProviderService")]
public interface IDataProviderService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/GetDataProviderConfig", ReplyAction="http://tempuri.org/IDataProviderService/GetDataProviderConfigResponse")]
    System.IAsyncResult BeginGetDataProviderConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetDataProviderConfig(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/GetData", ReplyAction="http://tempuri.org/IDataProviderService/GetDataResponse")]
    System.IAsyncResult BeginGetData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/CancelGetData", ReplyAction="http://tempuri.org/IDataProviderService/CancelGetDataResponse")]
    System.IAsyncResult BeginCancelGetData(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState);
    
    void EndCancelGetData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/GetExportData", ReplyAction="http://tempuri.org/IDataProviderService/GetExportDataResponse")]
    System.IAsyncResult BeginGetExportData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetExportData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/GetTopologyDiagramConfig", ReplyAction="http://tempuri.org/IDataProviderService/GetTopologyDiagramConfigResponse")]
    System.IAsyncResult BeginGetTopologyDiagramConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetTopologyDiagramConfig(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/GetTopologyDiagramData", ReplyAction="http://tempuri.org/IDataProviderService/GetTopologyDiagramDataResponse")]
    System.IAsyncResult BeginGetTopologyDiagramData(string dataProvID, Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetTopologyDiagramData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/MarkException", ReplyAction="http://tempuri.org/IDataProviderService/MarkExceptionResponse")]
    System.IAsyncResult BeginMarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndMarkException(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/UnmarkException", ReplyAction="http://tempuri.org/IDataProviderService/UnmarkExceptionResponse")]
    System.IAsyncResult BeginUnmarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndUnmarkException(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/CreateAnnotation", ReplyAction="http://tempuri.org/IDataProviderService/CreateAnnotationResponse")]
    System.IAsyncResult BeginCreateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndCreateAnnotation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/UpdateAnnotation", ReplyAction="http://tempuri.org/IDataProviderService/UpdateAnnotationResponse")]
    System.IAsyncResult BeginUpdateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndUpdateAnnotation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataProviderService/RemoveAnnotation", ReplyAction="http://tempuri.org/IDataProviderService/RemoveAnnotationResponse")]
    System.IAsyncResult BeginRemoveAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState);
    
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndRemoveAnnotation(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IDataProviderServiceChannel : IDataProviderService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDataProviderConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDataProviderConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetExportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetExportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTopologyDiagramConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTopologyDiagramConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTopologyDiagramDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTopologyDiagramDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MarkExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public MarkExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UnmarkExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UnmarkExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CreateAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RemoveAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public RemoveAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DataProviderServiceClient : System.ServiceModel.ClientBase<IDataProviderService>, IDataProviderService
{
    
    private BeginOperationDelegate onBeginGetDataProviderConfigDelegate;
    
    private EndOperationDelegate onEndGetDataProviderConfigDelegate;
    
    private System.Threading.SendOrPostCallback onGetDataProviderConfigCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetDataDelegate;
    
    private EndOperationDelegate onEndGetDataDelegate;
    
    private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginCancelGetDataDelegate;
    
    private EndOperationDelegate onEndCancelGetDataDelegate;
    
    private System.Threading.SendOrPostCallback onCancelGetDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetExportDataDelegate;
    
    private EndOperationDelegate onEndGetExportDataDelegate;
    
    private System.Threading.SendOrPostCallback onGetExportDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTopologyDiagramConfigDelegate;
    
    private EndOperationDelegate onEndGetTopologyDiagramConfigDelegate;
    
    private System.Threading.SendOrPostCallback onGetTopologyDiagramConfigCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTopologyDiagramDataDelegate;
    
    private EndOperationDelegate onEndGetTopologyDiagramDataDelegate;
    
    private System.Threading.SendOrPostCallback onGetTopologyDiagramDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginMarkExceptionDelegate;
    
    private EndOperationDelegate onEndMarkExceptionDelegate;
    
    private System.Threading.SendOrPostCallback onMarkExceptionCompletedDelegate;
    
    private BeginOperationDelegate onBeginUnmarkExceptionDelegate;
    
    private EndOperationDelegate onEndUnmarkExceptionDelegate;
    
    private System.Threading.SendOrPostCallback onUnmarkExceptionCompletedDelegate;
    
    private BeginOperationDelegate onBeginCreateAnnotationDelegate;
    
    private EndOperationDelegate onEndCreateAnnotationDelegate;
    
    private System.Threading.SendOrPostCallback onCreateAnnotationCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateAnnotationDelegate;
    
    private EndOperationDelegate onEndUpdateAnnotationDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateAnnotationCompletedDelegate;
    
    private BeginOperationDelegate onBeginRemoveAnnotationDelegate;
    
    private EndOperationDelegate onEndRemoveAnnotationDelegate;
    
    private System.Threading.SendOrPostCallback onRemoveAnnotationCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public DataProviderServiceClient()
    {
    }
    
    public DataProviderServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public DataProviderServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DataProviderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DataProviderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetDataProviderConfigCompletedEventArgs> GetDataProviderConfigCompleted;
    
    public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelGetDataCompleted;
    
    public event System.EventHandler<GetExportDataCompletedEventArgs> GetExportDataCompleted;
    
    public event System.EventHandler<GetTopologyDiagramConfigCompletedEventArgs> GetTopologyDiagramConfigCompleted;
    
    public event System.EventHandler<GetTopologyDiagramDataCompletedEventArgs> GetTopologyDiagramDataCompleted;
    
    public event System.EventHandler<MarkExceptionCompletedEventArgs> MarkExceptionCompleted;
    
    public event System.EventHandler<UnmarkExceptionCompletedEventArgs> UnmarkExceptionCompleted;
    
    public event System.EventHandler<CreateAnnotationCompletedEventArgs> CreateAnnotationCompleted;
    
    public event System.EventHandler<UpdateAnnotationCompletedEventArgs> UpdateAnnotationCompleted;
    
    public event System.EventHandler<RemoveAnnotationCompletedEventArgs> RemoveAnnotationCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginGetDataProviderConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDataProviderConfig(config, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndGetDataProviderConfig(System.IAsyncResult result)
    {
        return base.Channel.EndGetDataProviderConfig(result);
    }
    
    private System.IAsyncResult OnBeginGetDataProviderConfig(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config = ((Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginGetDataProviderConfig(config, callback, asyncState);
    }
    
    private object[] OnEndGetDataProviderConfig(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndGetDataProviderConfig(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDataProviderConfigCompleted(object state)
    {
        if ((this.GetDataProviderConfigCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDataProviderConfigCompleted(this, new GetDataProviderConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDataProviderConfigAsync(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config)
    {
        this.GetDataProviderConfigAsync(config, null);
    }
    
    public void GetDataProviderConfigAsync(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, object userState)
    {
        if ((this.onBeginGetDataProviderConfigDelegate == null))
        {
            this.onBeginGetDataProviderConfigDelegate = new BeginOperationDelegate(this.OnBeginGetDataProviderConfig);
        }
        if ((this.onEndGetDataProviderConfigDelegate == null))
        {
            this.onEndGetDataProviderConfigDelegate = new EndOperationDelegate(this.OnEndGetDataProviderConfig);
        }
        if ((this.onGetDataProviderConfigCompletedDelegate == null))
        {
            this.onGetDataProviderConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataProviderConfigCompleted);
        }
        base.InvokeAsync(this.onBeginGetDataProviderConfigDelegate, new object[] {
                    config}, this.onEndGetDataProviderConfigDelegate, this.onGetDataProviderConfigCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginGetData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetData(dataProvID, parameters, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndGetData(System.IAsyncResult result)
    {
        return base.Channel.EndGetData(result);
    }
    
    private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string dataProvID = ((string)(inValues[0]));
        Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters = ((Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO)(inValues[1]));
        return ((IDataProviderService)(this)).BeginGetData(dataProvID, parameters, callback, asyncState);
    }
    
    private object[] OnEndGetData(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndGetData(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDataCompleted(object state)
    {
        if ((this.GetDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters)
    {
        this.GetDataAsync(dataProvID, parameters, null);
    }
    
    public void GetDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, object userState)
    {
        if ((this.onBeginGetDataDelegate == null))
        {
            this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
        }
        if ((this.onEndGetDataDelegate == null))
        {
            this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
        }
        if ((this.onGetDataCompletedDelegate == null))
        {
            this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
        }
        base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                    dataProvID,
                    parameters}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginCancelGetData(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCancelGetData(parameters, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IDataProviderService.EndCancelGetData(System.IAsyncResult result)
    {
        base.Channel.EndCancelGetData(result);
    }
    
    private System.IAsyncResult OnBeginCancelGetData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters = ((Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginCancelGetData(parameters, callback, asyncState);
    }
    
    private object[] OnEndCancelGetData(System.IAsyncResult result)
    {
        ((IDataProviderService)(this)).EndCancelGetData(result);
        return null;
    }
    
    private void OnCancelGetDataCompleted(object state)
    {
        if ((this.CancelGetDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CancelGetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CancelGetDataAsync(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters)
    {
        this.CancelGetDataAsync(parameters, null);
    }
    
    public void CancelGetDataAsync(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, object userState)
    {
        if ((this.onBeginCancelGetDataDelegate == null))
        {
            this.onBeginCancelGetDataDelegate = new BeginOperationDelegate(this.OnBeginCancelGetData);
        }
        if ((this.onEndCancelGetDataDelegate == null))
        {
            this.onEndCancelGetDataDelegate = new EndOperationDelegate(this.OnEndCancelGetData);
        }
        if ((this.onCancelGetDataCompletedDelegate == null))
        {
            this.onCancelGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelGetDataCompleted);
        }
        base.InvokeAsync(this.onBeginCancelGetDataDelegate, new object[] {
                    parameters}, this.onEndCancelGetDataDelegate, this.onCancelGetDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginGetExportData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetExportData(dataProvID, parameters, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndGetExportData(System.IAsyncResult result)
    {
        return base.Channel.EndGetExportData(result);
    }
    
    private System.IAsyncResult OnBeginGetExportData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string dataProvID = ((string)(inValues[0]));
        Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters = ((Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO)(inValues[1]));
        return ((IDataProviderService)(this)).BeginGetExportData(dataProvID, parameters, callback, asyncState);
    }
    
    private object[] OnEndGetExportData(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndGetExportData(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetExportDataCompleted(object state)
    {
        if ((this.GetExportDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetExportDataCompleted(this, new GetExportDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetExportDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters)
    {
        this.GetExportDataAsync(dataProvID, parameters, null);
    }
    
    public void GetExportDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, object userState)
    {
        if ((this.onBeginGetExportDataDelegate == null))
        {
            this.onBeginGetExportDataDelegate = new BeginOperationDelegate(this.OnBeginGetExportData);
        }
        if ((this.onEndGetExportDataDelegate == null))
        {
            this.onEndGetExportDataDelegate = new EndOperationDelegate(this.OnEndGetExportData);
        }
        if ((this.onGetExportDataCompletedDelegate == null))
        {
            this.onGetExportDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExportDataCompleted);
        }
        base.InvokeAsync(this.onBeginGetExportDataDelegate, new object[] {
                    dataProvID,
                    parameters}, this.onEndGetExportDataDelegate, this.onGetExportDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginGetTopologyDiagramConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTopologyDiagramConfig(config, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndGetTopologyDiagramConfig(System.IAsyncResult result)
    {
        return base.Channel.EndGetTopologyDiagramConfig(result);
    }
    
    private System.IAsyncResult OnBeginGetTopologyDiagramConfig(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config = ((Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginGetTopologyDiagramConfig(config, callback, asyncState);
    }
    
    private object[] OnEndGetTopologyDiagramConfig(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndGetTopologyDiagramConfig(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTopologyDiagramConfigCompleted(object state)
    {
        if ((this.GetTopologyDiagramConfigCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTopologyDiagramConfigCompleted(this, new GetTopologyDiagramConfigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTopologyDiagramConfigAsync(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config)
    {
        this.GetTopologyDiagramConfigAsync(config, null);
    }
    
    public void GetTopologyDiagramConfigAsync(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, object userState)
    {
        if ((this.onBeginGetTopologyDiagramConfigDelegate == null))
        {
            this.onBeginGetTopologyDiagramConfigDelegate = new BeginOperationDelegate(this.OnBeginGetTopologyDiagramConfig);
        }
        if ((this.onEndGetTopologyDiagramConfigDelegate == null))
        {
            this.onEndGetTopologyDiagramConfigDelegate = new EndOperationDelegate(this.OnEndGetTopologyDiagramConfig);
        }
        if ((this.onGetTopologyDiagramConfigCompletedDelegate == null))
        {
            this.onGetTopologyDiagramConfigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopologyDiagramConfigCompleted);
        }
        base.InvokeAsync(this.onBeginGetTopologyDiagramConfigDelegate, new object[] {
                    config}, this.onEndGetTopologyDiagramConfigDelegate, this.onGetTopologyDiagramConfigCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginGetTopologyDiagramData(string dataProvID, Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTopologyDiagramData(dataProvID, parameters, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndGetTopologyDiagramData(System.IAsyncResult result)
    {
        return base.Channel.EndGetTopologyDiagramData(result);
    }
    
    private System.IAsyncResult OnBeginGetTopologyDiagramData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string dataProvID = ((string)(inValues[0]));
        Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters = ((Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO)(inValues[1]));
        return ((IDataProviderService)(this)).BeginGetTopologyDiagramData(dataProvID, parameters, callback, asyncState);
    }
    
    private object[] OnEndGetTopologyDiagramData(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndGetTopologyDiagramData(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTopologyDiagramDataCompleted(object state)
    {
        if ((this.GetTopologyDiagramDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTopologyDiagramDataCompleted(this, new GetTopologyDiagramDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTopologyDiagramDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters)
    {
        this.GetTopologyDiagramDataAsync(dataProvID, parameters, null);
    }
    
    public void GetTopologyDiagramDataAsync(string dataProvID, Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters, object userState)
    {
        if ((this.onBeginGetTopologyDiagramDataDelegate == null))
        {
            this.onBeginGetTopologyDiagramDataDelegate = new BeginOperationDelegate(this.OnBeginGetTopologyDiagramData);
        }
        if ((this.onEndGetTopologyDiagramDataDelegate == null))
        {
            this.onEndGetTopologyDiagramDataDelegate = new EndOperationDelegate(this.OnEndGetTopologyDiagramData);
        }
        if ((this.onGetTopologyDiagramDataCompletedDelegate == null))
        {
            this.onGetTopologyDiagramDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopologyDiagramDataCompleted);
        }
        base.InvokeAsync(this.onBeginGetTopologyDiagramDataDelegate, new object[] {
                    dataProvID,
                    parameters}, this.onEndGetTopologyDiagramDataDelegate, this.onGetTopologyDiagramDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginMarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginMarkException(exceptionParam, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndMarkException(System.IAsyncResult result)
    {
        return base.Channel.EndMarkException(result);
    }
    
    private System.IAsyncResult OnBeginMarkException(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam = ((Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginMarkException(exceptionParam, callback, asyncState);
    }
    
    private object[] OnEndMarkException(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndMarkException(result);
        return new object[] {
                retVal};
    }
    
    private void OnMarkExceptionCompleted(object state)
    {
        if ((this.MarkExceptionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.MarkExceptionCompleted(this, new MarkExceptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void MarkExceptionAsync(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam)
    {
        this.MarkExceptionAsync(exceptionParam, null);
    }
    
    public void MarkExceptionAsync(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, object userState)
    {
        if ((this.onBeginMarkExceptionDelegate == null))
        {
            this.onBeginMarkExceptionDelegate = new BeginOperationDelegate(this.OnBeginMarkException);
        }
        if ((this.onEndMarkExceptionDelegate == null))
        {
            this.onEndMarkExceptionDelegate = new EndOperationDelegate(this.OnEndMarkException);
        }
        if ((this.onMarkExceptionCompletedDelegate == null))
        {
            this.onMarkExceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkExceptionCompleted);
        }
        base.InvokeAsync(this.onBeginMarkExceptionDelegate, new object[] {
                    exceptionParam}, this.onEndMarkExceptionDelegate, this.onMarkExceptionCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginUnmarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUnmarkException(exceptionParam, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndUnmarkException(System.IAsyncResult result)
    {
        return base.Channel.EndUnmarkException(result);
    }
    
    private System.IAsyncResult OnBeginUnmarkException(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam = ((Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginUnmarkException(exceptionParam, callback, asyncState);
    }
    
    private object[] OnEndUnmarkException(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndUnmarkException(result);
        return new object[] {
                retVal};
    }
    
    private void OnUnmarkExceptionCompleted(object state)
    {
        if ((this.UnmarkExceptionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UnmarkExceptionCompleted(this, new UnmarkExceptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UnmarkExceptionAsync(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam)
    {
        this.UnmarkExceptionAsync(exceptionParam, null);
    }
    
    public void UnmarkExceptionAsync(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, object userState)
    {
        if ((this.onBeginUnmarkExceptionDelegate == null))
        {
            this.onBeginUnmarkExceptionDelegate = new BeginOperationDelegate(this.OnBeginUnmarkException);
        }
        if ((this.onEndUnmarkExceptionDelegate == null))
        {
            this.onEndUnmarkExceptionDelegate = new EndOperationDelegate(this.OnEndUnmarkException);
        }
        if ((this.onUnmarkExceptionCompletedDelegate == null))
        {
            this.onUnmarkExceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnmarkExceptionCompleted);
        }
        base.InvokeAsync(this.onBeginUnmarkExceptionDelegate, new object[] {
                    exceptionParam}, this.onEndUnmarkExceptionDelegate, this.onUnmarkExceptionCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginCreateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndCreateAnnotation(System.IAsyncResult result)
    {
        return base.Channel.EndCreateAnnotation(result);
    }
    
    private System.IAsyncResult OnBeginCreateAnnotation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO = ((Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginCreateAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    private object[] OnEndCreateAnnotation(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndCreateAnnotation(result);
        return new object[] {
                retVal};
    }
    
    private void OnCreateAnnotationCompleted(object state)
    {
        if ((this.CreateAnnotationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateAnnotationCompleted(this, new CreateAnnotationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CreateAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO)
    {
        this.CreateAnnotationAsync(annotationParamDTO, null);
    }
    
    public void CreateAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, object userState)
    {
        if ((this.onBeginCreateAnnotationDelegate == null))
        {
            this.onBeginCreateAnnotationDelegate = new BeginOperationDelegate(this.OnBeginCreateAnnotation);
        }
        if ((this.onEndCreateAnnotationDelegate == null))
        {
            this.onEndCreateAnnotationDelegate = new EndOperationDelegate(this.OnEndCreateAnnotation);
        }
        if ((this.onCreateAnnotationCompletedDelegate == null))
        {
            this.onCreateAnnotationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAnnotationCompleted);
        }
        base.InvokeAsync(this.onBeginCreateAnnotationDelegate, new object[] {
                    annotationParamDTO}, this.onEndCreateAnnotationDelegate, this.onCreateAnnotationCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginUpdateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndUpdateAnnotation(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateAnnotation(result);
    }
    
    private System.IAsyncResult OnBeginUpdateAnnotation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO = ((Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginUpdateAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    private object[] OnEndUpdateAnnotation(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndUpdateAnnotation(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateAnnotationCompleted(object state)
    {
        if ((this.UpdateAnnotationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateAnnotationCompleted(this, new UpdateAnnotationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO)
    {
        this.UpdateAnnotationAsync(annotationParamDTO, null);
    }
    
    public void UpdateAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, object userState)
    {
        if ((this.onBeginUpdateAnnotationDelegate == null))
        {
            this.onBeginUpdateAnnotationDelegate = new BeginOperationDelegate(this.OnBeginUpdateAnnotation);
        }
        if ((this.onEndUpdateAnnotationDelegate == null))
        {
            this.onEndUpdateAnnotationDelegate = new EndOperationDelegate(this.OnEndUpdateAnnotation);
        }
        if ((this.onUpdateAnnotationCompletedDelegate == null))
        {
            this.onUpdateAnnotationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAnnotationCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateAnnotationDelegate, new object[] {
                    annotationParamDTO}, this.onEndUpdateAnnotationDelegate, this.onUpdateAnnotationCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IDataProviderService.BeginRemoveAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRemoveAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO IDataProviderService.EndRemoveAnnotation(System.IAsyncResult result)
    {
        return base.Channel.EndRemoveAnnotation(result);
    }
    
    private System.IAsyncResult OnBeginRemoveAnnotation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO = ((Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO)(inValues[0]));
        return ((IDataProviderService)(this)).BeginRemoveAnnotation(annotationParamDTO, callback, asyncState);
    }
    
    private object[] OnEndRemoveAnnotation(System.IAsyncResult result)
    {
        Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO retVal = ((IDataProviderService)(this)).EndRemoveAnnotation(result);
        return new object[] {
                retVal};
    }
    
    private void OnRemoveAnnotationCompleted(object state)
    {
        if ((this.RemoveAnnotationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RemoveAnnotationCompleted(this, new RemoveAnnotationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void RemoveAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO)
    {
        this.RemoveAnnotationAsync(annotationParamDTO, null);
    }
    
    public void RemoveAnnotationAsync(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, object userState)
    {
        if ((this.onBeginRemoveAnnotationDelegate == null))
        {
            this.onBeginRemoveAnnotationDelegate = new BeginOperationDelegate(this.OnBeginRemoveAnnotation);
        }
        if ((this.onEndRemoveAnnotationDelegate == null))
        {
            this.onEndRemoveAnnotationDelegate = new EndOperationDelegate(this.OnEndRemoveAnnotation);
        }
        if ((this.onRemoveAnnotationCompletedDelegate == null))
        {
            this.onRemoveAnnotationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAnnotationCompleted);
        }
        base.InvokeAsync(this.onBeginRemoveAnnotationDelegate, new object[] {
                    annotationParamDTO}, this.onEndRemoveAnnotationDelegate, this.onRemoveAnnotationCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IDataProviderService CreateChannel()
    {
        return new DataProviderServiceClientChannel(this);
    }
    
    private class DataProviderServiceClientChannel : ChannelBase<IDataProviderService>, IDataProviderService
    {
        
        public DataProviderServiceClientChannel(System.ServiceModel.ClientBase<IDataProviderService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetDataProviderConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = config;
            System.IAsyncResult _result = base.BeginInvoke("GetDataProviderConfig", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetDataProviderConfig(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("GetDataProviderConfig", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = dataProvID;
            _args[1] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("GetData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginCancelGetData(Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("CancelGetData", _args, callback, asyncState);
            return _result;
        }
        
        public void EndCancelGetData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("CancelGetData", _args, result);
        }
        
        public System.IAsyncResult BeginGetExportData(string dataProvID, Xplore.Framework.Common.DataProvider.DTO.GetDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = dataProvID;
            _args[1] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetExportData", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetExportData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("GetExportData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetTopologyDiagramConfig(Xplore.Framework.Common.DataProvider.DTO.GetConfigDTO config, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = config;
            System.IAsyncResult _result = base.BeginInvoke("GetTopologyDiagramConfig", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetTopologyDiagramConfig(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("GetTopologyDiagramConfig", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetTopologyDiagramData(string dataProvID, Xplore.Framework.Common.DataProvider.Topology.DTO.GetTopologyDataParamsDTO parameters, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = dataProvID;
            _args[1] = parameters;
            System.IAsyncResult _result = base.BeginInvoke("GetTopologyDiagramData", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndGetTopologyDiagramData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("GetTopologyDiagramData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginMarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = exceptionParam;
            System.IAsyncResult _result = base.BeginInvoke("MarkException", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndMarkException(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("MarkException", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUnmarkException(Xplore.Framework.Common.DataProvider.DTO.In.ExceptionParamDTO exceptionParam, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = exceptionParam;
            System.IAsyncResult _result = base.BeginInvoke("UnmarkException", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndUnmarkException(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("UnmarkException", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginCreateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = annotationParamDTO;
            System.IAsyncResult _result = base.BeginInvoke("CreateAnnotation", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndCreateAnnotation(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("CreateAnnotation", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = annotationParamDTO;
            System.IAsyncResult _result = base.BeginInvoke("UpdateAnnotation", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndUpdateAnnotation(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("UpdateAnnotation", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginRemoveAnnotation(Xplore.Framework.Common.DataProvider.DTO.In.AnnotationParamDTO annotationParamDTO, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = annotationParamDTO;
            System.IAsyncResult _result = base.BeginInvoke("RemoveAnnotation", _args, callback, asyncState);
            return _result;
        }
        
        public Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO EndRemoveAnnotation(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO _result = ((Xplore.Framework.Common.DataProvider.DTO.DataProviderWSResultDTO)(base.EndInvoke("RemoveAnnotation", _args, result)));
            return _result;
        }
    }
}
